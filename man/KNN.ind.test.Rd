% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KNN_test.R
\name{KNN.ind.test}
\alias{KNN.ind.test}
\title{Individual Hypothesis Test for a Single Variance Component using KNN}
\usage{
KNN.ind.test(
  pheno.donor,
  counts.mat,
  annotation,
  test.ind,
  gene.regions = NULL,
  input.kernel = NULL,
  MINQUE.type = "MINQUE0",
  method = "KNN",
  lambda = 0,
  weight = NULL,
  design.mat = NULL,
  constrain = FALSE,
  variance.component.list = NULL
)
}
\arguments{
\item{pheno.donor}{Numeric vector of phenotype values for each donor}

\item{counts.mat}{Numeric matrix of gene expression counts (genes x cells)}

\item{annotation}{Data frame with cell-level annotations}

\item{test.ind}{Integer index of the variance component to test}

\item{gene.regions}{A list where each element is a character vector of gene names}

\item{input.kernel}{Character vector specifying kernel types}

\item{MINQUE.type}{Character string, either "MINQUE0" or "MINQUE1"}

\item{method}{Character string, either "LMM" or "KNN" (default)}

\item{lambda}{Numeric regularization parameter (default = 0)}

\item{weight}{Optional numeric vector of initial weights}

\item{design.mat}{Optional design matrix for fixed effects}

\item{constrain}{Logical, whether to constrain variance components}

\item{variance.component.list}{Optional pre-computed variance components}
}
\value{
A list containing:
\describe{
\item{pvalue}{P-value from the mixture of chi-square test}
}
}
\description{
Tests whether a specific variance component is significantly different from zero
using a mixture of chi-square distributions. This is useful for testing the
contribution of individual cell types or kernel components.
}
\details{
This function fits both a full model (with all variance components) and a
reduced model (without the tested component). The likelihood ratio test
statistic follows a mixture of chi-square distributions.
}
\examples{
\dontrun{
# Test if the second variance component (e.g., a cell type) is significant
test_result <- KNN.ind.test(pheno.donor, counts.mat, annotation,
                            test.ind = 2)
print(test_result$pvalue)
}

}
